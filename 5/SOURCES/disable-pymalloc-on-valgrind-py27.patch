diff -up Python-2.6.8/configure.in.valgrind Python-2.6.8/configure.in
--- Python-2.6.8/configure.in.valgrind	2012-04-12 13:27:39.301248146 -0400
+++ Python-2.6.8/configure.in	2012-04-12 13:27:39.325247847 -0400
@@ -2538,6 +2538,19 @@ then
 fi
 AC_MSG_RESULT($with_pymalloc)
 
+# Check for Valgrind support
+AC_MSG_CHECKING([for --with-valgrind])
+AC_ARG_WITH([valgrind],
+  AC_HELP_STRING([--with-valgrind], [Enable Valgrind support]),,
+  with_valgrind=no)
+AC_MSG_RESULT([$with_valgrind])
+if test "$with_valgrind" != no; then
+    AC_CHECK_HEADER([valgrind/valgrind.h],
+      [AC_DEFINE([WITH_VALGRIND], 1, [Define if you want pymalloc to be disabled when running under valgrind])],
+      [AC_MSG_ERROR([Valgrind support requested but headers not available])]
+    )
+fi
+
 # Check for --with-wctype-functions
 AC_MSG_CHECKING(for --with-wctype-functions)
 AC_ARG_WITH(wctype-functions, 
diff -up Python-2.6.8/Misc/NEWS.valgrind Python-2.6.8/Misc/NEWS
--- Python-2.6.8/Misc/NEWS.valgrind	2012-04-10 11:32:08.000000000 -0400
+++ Python-2.6.8/Misc/NEWS	2012-04-12 13:27:39.331247771 -0400
@@ -68,6 +68,11 @@ What's New in Python 2.6.7 rc 2?
  allowed.  Python 2.6.7 and beyond will be source only releases.*
 
 
+- Issue #2422: When compiled with the ``--with-valgrind`` option, the
+  pymalloc allocator will be automatically disabled when running under
+  Valgrind.  This gives improved memory leak detection when running
+  under Valgrind, while taking advantage of pymalloc at other times.
+
 Library
 -------
 
diff -up Python-2.6.8/pyconfig.h.in.valgrind Python-2.6.8/pyconfig.h.in
--- Python-2.6.8/pyconfig.h.in.valgrind	2012-04-10 11:32:11.000000000 -0400
+++ Python-2.6.8/pyconfig.h.in	2012-04-12 13:27:39.332247759 -0400
@@ -1085,6 +1085,9 @@
 /* Define to empty if the keyword does not work. */
 #undef volatile
 
+/* Define if you want pymalloc to be disabled when running under valgrind */
+#undef WITH_VALGRIND
+
 
 /* Define the macros needed if on a UnixWare 7.x system. */
 #if defined(__USLC__) && defined(__SCO_VERSION__)
